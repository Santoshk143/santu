trigger:
- none

jobs:
- job: 'TestCoverage'
  timeoutInMinutes: 180
  workspace:
    clean: all
  pool:
    name: $(AgentPoolName)

  steps:
  - checkout: none
    clean: true

  - script: |
      git clone https://$(username):$(password)@$(ADOURL)/EventCorrelationSystem/EventCorrelationSystem/_git/EventCorrelationSystem --branch $(branch_name) --depth=1 $(branch_name)
    displayName: Clone_EventCorrelationSystem_Repository

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.10.11'
      addToPath: true

  - task: CmdLine@2
    displayName: 'Restore .Net Core Nuget Packages'
    inputs:
      script: |
        dotnet restore $(Build.SourcesDirectory)/$(branch_name)/IEM_Core/IEM.sln 

  - task: CmdLine@2
    displayName: 'Creating virtual env'
    inputs:
      script: |
        cd $(Build.SourcesDirectory)/$(branch_name)
        python -m venv env

  - task: CmdLine@2
    enabled: true
    displayName: 'Running Python unittest cases'
    continueOnError: true
    inputs:
      script: |
        cd $(Build.SourcesDirectory)/$(branch_name)
        env\Scripts\activate.bat && python -m pip install --upgrade pip && pip install -r $(Build.SourcesDirectory)/$(branch_name)/iECE_Main/MainUX/IECE_UI/requirements.txt && pip install coverage pytest pytest-cov unittest-xml-reporting && cd $(Build.SourcesDirectory)/$(branch_name)/iECE_Main\MainUX\IECE_UI && coverage run --source='.' manage.py test && python -m coverage report && coverage xml && pytest -v -o junit_family=xunit1 --junitxml=$(Build.SourcesDirectory)\$(branch_name)\test-results\results.xml

  - task: CmdLine@2
    enabled: true
    displayName: 'Start Sonar Scanner'
    inputs:
      script: |
        cd $(Build.SourcesDirectory)/$(branch_name)
        $(SonarScannerPath) begin /k:iECE /d:sonar.host.url=$(sonarqube_url) /d:sonar.login=$(sonarqube_token) /d:sonar.branch.name=$(branch_name) /d:sonar.python.version=3 /d:sonar.python.coverage.reportPaths="$(Build.SourcesDirectory)\$(branch_name)\iECE_Main\MainUX\IECE_UI\coverage.xml" /d:sonar.python.xunit.reportPath="$(Build.SourcesDirectory)\$(branch_name)\test-results\results.xml" /d:sonar.exclusions="**/DBProd_Script/**,**/DBScripts/**,**/Database/**,**/Lib/**,**/libs/****/dist/**, **/JQuery/**, **/Admin/**, **/UtilityJS/**, **/Content/**, **/Contents/**, **/lib/**, **/js/**, **/sessvars.js, **/Scripts/UtilityJS/**, **/scripts/**, **/Scripts/**" /d:sonar.c.file.suffixes=- /d:sonar.cpp.file.suffixes=- /d:sonar.objc.file.suffixes=- /v:$(project_version) /d:sonar.python.xunit.skipDetails=true

  - task: MSBuild@1
    displayName: 'Build MLToolkit.sln'
    inputs:
      solution: '$(Build.SourcesDirectory)/$(branch_name)/IEM_Core/IEM.sln'
      msbuildLocationMethod: 'location'
      msbuildLocation: '$(MSBuildPath)'
      platform: '$(BuildPlatform)'
      configuration: '$(Buildconfiguration)'
      clean: true
      restoreNugetPackages: true

  - task: CmdLine@2
    displayName: 'Build Python Build'
    inputs:
      script: 'dotnet build $(Build.SourcesDirectory)\$(branch_name)\DevOps\BuildPythonRepo\BuildPythonRepo.csproj'

  - task: CmdLine@2
    enabled: true
    displayName: 'End Sonar Scanner'
    inputs:
      script: |
        $(SonarScannerPath) end /d:sonar.login=$(sonarqube_token)

  - task: PublishCodeCoverageResults@2
    inputs:
      summaryFileLocation: '$(Build.SourcesDirectory)\$(branch_name)\iECE_Main\MainUX\IECE_UI\coverage.xml'
    continueOnError: true

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '$(Build.SourcesDirectory)/$(branch_name)/iECE_Main\MainUX\IECE_UI\results.xml'
      mergeTestResults: true
